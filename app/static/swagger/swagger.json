{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger S4I",
    "license": {
      "name": "MIT"
    }
  },
  "host": "http://localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Get Access Token",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "An array of users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "birthDate": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "The id of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "body",
            "description": "The firstName of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "body",
            "description": "The lastName of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "birthDate",
            "in": "body",
            "description": "The birthDate of the user",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A User",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "birthDate": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "firstName",
            "in": "body",
            "description": "The firstName of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "body",
            "description": "The lastName of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "birthDate",
            "in": "body",
            "description": "The birthDate of the user",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/items": {
      "post": {
        "summary": "Create an item",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "The item to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "summary": "Get an item",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an item",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item",
            "in": "body",
            "description": "The updated item data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/controller/get-name": {
      "get": {
        "summary": "Get Name",
        "responses": {
          "200": {
            "description": "Returns the name from the 'Project' model",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}